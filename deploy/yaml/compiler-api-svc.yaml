apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: compiler-api
  name: compiler-api
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: compiler-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: compiler-api
    spec:
      containers:
      - image: gcr.io/arxiv-compiler-dev/arxiv-compiler:v7.13
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: mypvc
          mountPath: /sources
        name: arxiv-compiler
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        # My additions to pull in configuration settings.
        env:
          # Define the environment settings

          # AWS - S3 and Container Registry - temporary
          - name: AWS_ACCESS_KEY_ID
            value: "access_key"
          - name: AWS_SECRET_ACCESS_KEY
            value: "secret_access_key"
          - name: AWS_S3_REGION_NAME
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: AWS_S3_REGION_NAME

          # Redis settings
          - name: REDIS_ENDPOINT_XXX
            value: "10.190.78.203"
          - name: REDIS_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: REDIS_ENDPOINT

          # File manager settings
          - name: FILEMANAGER_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FILEMANAGER_ENDPOINT
          - name: FILEMANAGER_VERIFY_CHECKSUM
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FILEMANAGER_VERIFY_CHECKSUM
          - name: FILEMANAGER_CONTENT_PATH
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FILEMANAGER_CONTENT_PATH
          - name: FILEMANAGER_STATUS_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FILEMANAGER_STATUS_ENDPOINT

          # Flask settings
          - name: FLASK_APP
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FLASK_APP
          - name: FLASK_DEBUG
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: FLASK_DEBUG
          - name: JWT_SECRET_XXX
            value: "foosecret"
          - name: JWT_SECRET
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: JWT_SECRET
          - name: LOGLEVEL
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: LOGLEVEL

          # S3 Settings
          - name: S3_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: S3_ENDPOINT
          - name: S3_VERIFY
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: S3_VERIFY
          - name: USE_SSL
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: S3_USE_SSL
          - name: DEBUG
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: S3_DEBUG

          # General application settings
          - name: VERBOSE_COMPILE
            value:
          - name: VERBOSE_COMPILE
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: VERBOSE_COMPILE
          - name: WAIT_FOR_SERVICES
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: WAIT_FOR_SERVICES
          - name: WAIT_ON_STARTUP
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: WAIT_ON_STARTUP

          # Vault is going away
          - name: VAULT_ENABLED
            valueFrom:
              configMapKeyRef:
                name: compiler-dev-configmap
                key: VAULT_ENABLED
      volumes:
      - name: mypvc
        persistentVolumeClaim:
          claimName: fileserver-claim
          readOnly: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: compiler-api
  name: compiler-api
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 31718
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: compiler-api
  sessionAffinity: None
  type: LoadBalancer
